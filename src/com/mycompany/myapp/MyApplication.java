package com.mycompany.myapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.mycompany.myapp.Entities.CategorieMedicale;
import com.mycompany.myapp.Entities.Consultation;
import com.mycompany.myapp.Entities.Question;
import com.mycompany.myapp.Entities.Reponse;
import com.mycompany.myapp.Entities.User;
import com.mycompany.myapp.Gui.zohra.AfficherConsultationPatient;
import com.mycompany.myapp.Gui.zohra.AfficherToutesLesQuestions;
import com.mycompany.myapp.Gui.zohra.AfficherUneQuestion;
import com.mycompany.myapp.Gui.zohra.AjouterConsultation;
import com.mycompany.myapp.Gui.zohra.CalendrierConsultation;
import com.mycompany.myapp.Gui.zohra.ListeCategorieMedicale;
import com.mycompany.myapp.Gui.zohra.ListeConsultation;
import com.mycompany.myapp.Gui.zohra.ModifierCategorieMedicale;
import com.mycompany.myapp.Gui.zohra.ModifierConsultation;
import com.mycompany.myapp.Gui.zohra.PoserQuestion;
import com.mycompany.myapp.Gui.zohra.homeQuestion;
import com.mycompany.myapp.Services.ConsultationService;
import com.mycompany.myapp.Services.QuestionService;
import com.mycompany.myapp.Services.ReponseService;
import com.mycompany.myapp.Services.categorieMedicaleService;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        /*if(current != null){
            current.show();
            return;
        }
        Home h=new Home();
        Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hi World"));
        h.show();*/
        
        
        /*categorieMedicaleService c=new categorieMedicaleService();
        c.getAll();*/
       /* ReponseService r = new ReponseService();
        r.getAll();*/
     /* ConsultationService cons=new ConsultationService();
     cons.getAllPatient();*/
     
     User user=new User();
     user.setId(6);
     user.setType("medecin");
     Question question= new Question();
     Reponse reponse = new Reponse();
     CategorieMedicale categorieMedicale=new CategorieMedicale();
     Consultation consultation=new Consultation();
     
     
      //ki nenzel aala question fel menu
     new AfficherToutesLesQuestions(question,user).show();
     
     
     
     //ki nenzel aala consultation
    /* if(user.getType()=="patient")
     {
          new ListeConsultation(consultation,user).show();
     }
     else
     {
         new AfficherConsultationPatient(consultation,user).show();
     }*/
      
     //ki nenzel aala categorieMedicale
   // new ListeCategorieMedicale(categorieMedicale).show();
  

     
    
      /* 
 new AjouterConsultation(consultation);*/

       //new PoserQuestion(user,u).show();
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
